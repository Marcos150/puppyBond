@model IEnumerable<MensajeViewModel>

@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = "Mensajes";
}

@{
    UsuarioViewModel usuario = Context.Session.Get<UsuarioViewModel>("usuario");
}

<div class="container-fluid vh-100 d-flex flex-column">
    <!-- Main Content -->
    <div class="row flex-grow-1">
        <!-- Sidebar -->
        <div id="contenedorUsuarios" class="col-3 border-end p-3 overflow-auto">
            <!-- TODO: Mostrar nombre en lugar de correo -->
            @foreach (var item in Model.DistinctBy(msg => msg.EmailUsuarioRecibe).Where(msg => msg.EmailUsuarioRecibe != usuario.Email))
            {
                <div class="user-item d-flex align-items-center mb-3">
                    <i class="bi bi-person-circle me-2" style="font-size: 2rem;"></i>
                    <a href="/Mensajes/Index?usuarioEmail=@item.EmailUsuarioRecibe"><span>@item.EmailUsuarioRecibe</span></a>
                </div>
            }
            <!-- Imprime usuarios que te han enviado mensajes, pero tu a ellos no -->
            @foreach (var item in Model.DistinctBy(msg => msg.EmailUsuarioEnvia).Where(msg => msg.EmailUsuarioEnvia != usuario.Email))
            {
                <div class="user-item d-flex align-items-center mb-3">
                    <i class="bi bi-person-circle me-2" style="font-size: 2rem;"></i>
                    <a href="/Mensajes/Index?usuarioEmail=@item.EmailUsuarioEnvia"><span>@item.EmailUsuarioEnvia</span></a>
                </div>
            }
        </div>

        <!-- Chat Area -->
        <div class="col-9 d-flex flex-column">
            <div class="chat-messages flex-grow-1 p-3 overflow-auto">
                @foreach (var item in Model)
                {
                    if (usuario.Email == item.EmailUsuarioRecibe)
                    {
                        if (item.Contenido.Contains("https://www.google.com/maps/search/?q="))
                        {
                            <a href="@item.Contenido" target="_blank" class="message w-75 bg-secondary p-2 rounded mb-2 align-self-end d-block">📍 Ubicación recibida</a>
                        }
                        else
                        {
                            <div class="message w-75 bg-secondary p-2 rounded mb-2 align-self-end">@item.Contenido</div>
                        }
                    }
                    if (usuario.Email == item.EmailUsuarioEnvia)
                    {
                        if (item.Contenido.Contains("https://www.google.com/maps/search/?q="))
                        {
                            <a href="@item.Contenido" target="_blank" class="message w-75 bg-primary p-2 rounded mb-2 align-self-end d-block">📍 Ubicación enviada</a>
                        }
                        else
                        {
                            <div class="message w-75 bg-primary p-2 rounded mb-2 align-self-end">@item.Contenido</div>
                        }
                    }
                }
            </div>
            @{
                //Obtiene el correo del usuario a enviar el mensaje desde query strings
                Microsoft.Extensions.Primitives.StringValues queryVal;
                Context.Request.Query.TryGetValue("correoUsuario", out queryVal);
                string correoReceptor = queryVal.FirstOrDefault() ?? Model.DistinctBy(msg => msg.EmailUsuarioRecibe).Where(msg => msg.EmailUsuarioRecibe != usuario.Email).FirstOrDefault()?.EmailUsuarioRecibe ?? Model.DistinctBy(msg => msg.EmailUsuarioEnvia).Where(msg => msg.EmailUsuarioEnvia != usuario.Email).First().EmailUsuarioEnvia;
            }
            <form id="formMensaje" action="/Mensajes/Enviar" method="post" class="chat-input d-flex align-items-center p-2 border-top">
                <input type="hidden" name="correoReceptor" value="@correoReceptor" />
                <input type="text" class="form-control me-2" placeholder="Escribe un mensaje..." name="contenido" required />
                <button class="btn btn-primary">
                    Enviar
                </button>
            </form>
            <button id="btnUbicacion" type="button" class="btn btn-secondary">Enviar ubicación</button>
            <script>
                //Quita los contactos repetidos. Lo siento, no hay tiempo para hacerlo mejor
                const divs = document.querySelectorAll("#contenedorUsuarios > div");
                const divsArray = Array.from(divs);
                const divsContent = divsArray.map(div => div.innerHTML);
                const uniqueDivsContent = [...new Set(divsContent)];
                const duplicates = divsArray.filter((div, index) => divsContent.indexOf(uniqueDivsContent[index]) !== index);
                duplicates.forEach(duplicate => duplicate.remove());


                document.getElementById("btnUbicacion").addEventListener("click", () => {
                    navigator.geolocation.getCurrentPosition((position) => {
                        const lat = position.coords.latitude;
                        const lon = position.coords.longitude;
                        const url = `https://www.google.com/maps/search/?q=${lat},${lon}`;
                        document.getElementById("formMensaje").contenido.value = url;
                        document.getElementById("formMensaje").submit();
                    });
                });
            </script>
        </div>
    </div>
</div>

<!-- Estilos opcionales -->
<style>
    a {
        color: black;
        text-decoration: none;

        &:hover {
            color: black;
        }
    }
    .user-item {
        cursor: pointer;
        transition: background-color 0.3s ease;

        &:hover {
            background-color: #f8f9fa;
        }
    }

    .chat-messages {
        background-color: #e9ecef;
        border-radius: 10px;
    }

    .message {
        color: white;
        word-wrap: break-word;
    }

    .chat-input input {
        border-radius: 20px;
    }
</style>